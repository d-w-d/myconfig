#!/usr/bin/env bash
#
# Install vim with clipboard and python3 support from source
# This script was developed within the docker image myubuntu18.04
# It assumes packages such as python3, python3-dev, etc.
# For a full list of assumed packages, see Dockerfile for myubuntu18.04

##############################################################
### Inherit $MYCONFIG_ROOT_DIR from parent script
##############################################################

MYCONFIG_ROOT_DIR=${MYCONFIG_ROOT_DIR:-"$HOME/.myconfig"}

##############################################################
### Message
##############################################################

PREVIOUSDIR=$PWD

clear && printf '\e[3J'
echo -e """${CYA}
==========================
INSTALLING VIM FROM SOURCE
==========================
${GRE}
By default, this script will not build its own ncurses lib.
You can build ncurses to .myfs by adding --with-ncurses

Sleeping for 3s before starting...
${WHI}
"""
sleep 3

###########################################
### If sudo user, install all dependencies
###########################################

### Need to make sure we have the right python libs for our installations
### E.g. if `which python3` shows /usr/bin/python3 and `python3 -V` gives
### `Python 3.6.9` then you need to make sure that we have a config dir with
### a Makefile in it at `/usr/lib/python3.6/`.

### Default values for Ubuntu 18:
PYTHON2_CONFIG_DIR="/usr/lib/python2.7/config-x86_64-linux-gnu"
PYTHON3_CONFIG_DIR="/usr/lib/python3.6/config-3.6m-x86_64-linux-gnu"

### Raspberry Pi OS
#PYTHON2_CONFIG_DIR="TODO"
#PYTHON3_CONFIG_DIR="TODO"

### Ubuntu 20.04 RPi3/4
#PYTHON2_CONFIG_DIR="/usr/lib/python2.7/config-aarch64-linux-gnu"
#PYTHON3_CONFIG_DIR="/usr/lib/python3.8/config-3.8-aarch64-linux-gnu"

[ ! -f "$PYTHON2_CONFIG_DIR/Makefile" ] &&
    echo "Can't find $PYTHON2_CONFIG_DIR/Makefile ...exiting." &&
    return 1

[ ! -f "$PYTHON3_CONFIG_DIR/Makefile" ] &&
    echo "Can't find $PYTHON3_CONFIG_DIR/Makefile ...exiting." &&
    return 1

###########################################
### If sudo user, install all dependencies
###########################################

if [[ $(groups | grep sudo | wc -l) == 1 ]]; then
    echo -e """
        You have sudo permissions; let's use them to install dependencies for vim!
    """
    sleep 3

    sudo apt update -y
    sudo apt upgrade -y
    sudo apt install build-essential \
        man \
        manpages-dev \
        git \
        curl \
        cmake \
        python \
        python3 \
        python-dev \
        python3-dev \
        python3-pip \
        libx11-6 \
        libx11-dev \
        libxtst-dev \
        libxt-dev \
        libsm-dev \
        libevent-dev \
        libncurses5-dev \
        libncurses5 \
        libxpm-dev
fi

#########################################
### Vim Requires ncurses
#########################################

if [[ $1 == '--with-ncurses' ]]; then
    echo "Installing ncurses to .myfs"
    sleep 2
    cd /tmp
    curl -o ncurses.tar.gz http://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.2.tar.gz
    tar -xzvf ncurses.tar.gz
    cd ncurses-6.2
    make distclean >/dev/null 2>&1
    ./configure --prefix=$HOME/.myfs/usr/local
    make
    make install
else
    echo "Skipping ncurses from source..."
    sleep 2
fi

#########################################
### Build vim from source
#########################################

cd /tmp
git clone https://github.com/vim/vim.git
cd vim/src

make distclean
### Make sure the python3-config-dir points to the dir with makefile corresponding to
### your installation of python3
BEGINCONFIG=true \
    CFLAGS="-I$HOME/.myfs/usr/local/include" \
    LDFLAGS="-L$HOME/.myfs/usr/local/lib" ./configure \
    LD_LIBRARY_PATH="$HOME/.myfs/usr/local/lib" \
    --with-x \
    --enable-gui="auto" \
    --enable-gtk2-check \
    --enable-pythoninterp="yes" \
    --with-python-config-dir="$PYTHON2_CONFIG_DIR" \
    --enable-python3interp="yes" \
    --with-python3-config-dir="$PYTHON3_CONFIG_DIR" \
    --enable-fail-if-missing \
    --prefix="$HOME/.myfs/usr/local"
make
make install

cd $PREVIOUSDIR

### Check if vim is now installed
if hash vim >/dev/null 2>&1; then
    ### Now that vim is installed, let's download vundle plugins
    echo "Vim installed; now re-downloading vundle plugins"
    source $MYCONFIG_ROOT_DIR/COMMON/common_functions.sh
    fun_bg_install_vundle_plugins
else
    echo -e """
${RED}Vim is not installed. Something must have gone wrong.
"""
fi
