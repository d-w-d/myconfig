#!/bin/bash
#
# Simple helper to quickly jump into any running docker container
# without having to copy/paste container IDs.

### Params
# No params stored; script is intentionally simple.

#######################################
# Crude helper printout
# Arguments:
#   None
#######################################
function help() {
  clear
  echo -e """
    Usage:
    _docker_enterer           -   List and enter running docker containers
    _docker_enterer --sudo    -   Use sudo with docker commands
    _docker_enterer --help    -   Show usage
  """
}

#######################################
# Search for running docker containers and enter if found
# Arguments:
#   - if the word 'sudo' is supplied, then run docker with sudo
#######################################
function main() {

  SUDO=$1

  ### Test if there are any running docker containers by counting output lines
  number_of_running_containers=$($SUDO docker container ls | wc -l)
  if [[ $number_of_running_containers -eq 1 ]]; then
    echo "No running docker containers found"
    exit 1
  fi

  ### Extract all running-container names and ids into bash arrays
  containerIds=($($SUDO docker container ls | sed -n '2,$p' | tr -s " " | cut -f1 -d' '))
  containerNames=($($SUDO docker container ls | rev | sed -n '2,$p' | tr -s " " | cut -f1 -d' ' | rev))
  imageNames=($($SUDO docker container ls | sed -n '2,$p' | tr -s " " | cut -f2 -d' '))

  ### If there's only one container, just jump straight into it
  if [[ $number_of_running_containers -eq 2 ]]; then

    echo "1 container found: ${containerNames[0]} (${imageNames[0]}). Entering in 2s ..."
    sleep 2
    $SUDO docker exec -it "${containerIds[0]}" bash 2>/dev/null || $SUDO docker exec -it "${containerIds[0]}" sh

  else

    clear
    echo "Choose a number (0-$((${#containerIds[@]} - 1))) for the container to enter:"
    echo "====== ============ ==========================================="
    echo "Choice ContainerId  Container (Image) Name"
    echo "====== ============ ==========================================="
    ### Perform C-like for loop over multiple containerIds
    for ((i = 0; i < ${#containerIds[@]}; ++i)); do
      # Print choices of container to screen
      echo "$i     ${containerIds[i]} ${containerNames[i]} (${imageNames[i]})"
    done
    echo "====== ============ ==========================================="
    echo

    ### Prompt use to choose container listed
    read -p "Choice: " choice
    if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 0 || choice >= ${#containerIds[@]} )); then
      echo "Invalid choice"
      exit 1
    fi
    ### Enter chosen container
    echo "Entering container ${containerNames[$choice]} (${imageNames[$choice]})"
    sleep 1
    $SUDO docker exec -it "${containerIds[$choice]}" bash 2>/dev/null || $SUDO docker exec -it "${containerIds[$choice]}" sh

  fi

}

### Main script switch
if [[ -z $1 ]]; then
  main
elif [[ $1 == "--sudo" ]]; then
  main sudo
else
  help
fi

