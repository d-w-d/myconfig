#!/usr/bin/env bash
#
# yusr = yum + user; it's like 'pip install --user' but for yum
# yusr is a crude wrapper around yumdownloader, rpm2cpio and cpio
# It was developed within a docker centos8 image

### Check the prereq commands are available
function abort_install() {
    echo "${1:-Aborting install for unspecified reasons}"
    echo "This script relies on the admin installing 'yum-utils'"
    echo "If that isn't an option then, well, is it really worth it?"
    exit 1
}
command -v yumdownloader >/dev/null 2>&1 || abort_install "yumdownloader not found; exiting;"
command -v rpm2cpio >/dev/null 2>&1 || abort_install "rpm2cpio not found; exiting;"
command -v getopts >/dev/null 2>&1 || abort_install "getopts not found; exiting;"

### Setup dirs
[[ ! -d $HOME/.myfs/rpm ]] && mkdir -p $HOME/.myfs/rpm

###############################################################
### Parse commands, args, etc.
###############################################################

### Parse options to the `yusr` command
### See: https://sookocheff.com/post/bash/parsing-bash-script-arguments-with-shopts/
while getopts ":h" opt; do
    case ${opt} in
    h)
        echo "Usage:"
        echo "yusr -h                   Display this help message."
        echo "yusr install <package>    Install <package>."
        echo "yusr search <package>     Search <package>."
        exit 0
        ;;
    \?)
        echo "Invalid Option: -$OPTARG" 1>&2
        exit 1
        ;;
    esac
done
shift $((OPTIND - 1))
subcommand=$1
shift # Remove 'yusr' from the argument list

### Parse options to the install sub command
case "$subcommand" in
install)
    package=$1
    shift # Remove 'install' from the argument list

    ### Logic to download and extract rpm files
    prev_dir=$PWD
    ### On this approach, don't save previous rpm files
    [[ ! -d $HOME/.myfs/rpm ]] && mkdir -p $HOME/.myfs/rpm
    cd "$HOME/.myfs/rpm"
    ### Make sure filesystem is the first thing to be recorded for extraction!
    #echo "$HOME/.myfs/rpm/filesystem-3.8-3.el8.x86_64.rpm" >/tmp/temprpmfiles.txt
    ### Use yumdownloader to download rpms for package and dependencies
    yumdownloader --resolve --alldeps $package >>/tmp/temprpmfiles.txt
    ### Loop through entries in /tmp/temprpmfiles.txt
    IFS=$'\r\n' GLOBIGNORE='*' command eval \
        lines=$(cat /tmp/temprpmfiles.txt | cut -f2 -d' ' | sed 's/://g')
    cd $HOME/.myfs
    rpm2cpio "filesystem-3.8-3.el8.x86_64.rpm" | cpio -id --no-preserve-owner

    ### Loop through rpms and extract filesystem to .myfs
    for line in "${lines[@]}"; do
        chmod -R u+w .
        echo ">>> $line"
        rpm2cpio "$line" | cpio -id --no-preserve-owner
        # Make sure we don't create anything we can't edit later
        chmod -R u+w .
    done
    cd $prev_dir
    ;;
search)
    package=$1
    shift # Remove 'search' from the argument list
    yum search $package
    ;;
esac
